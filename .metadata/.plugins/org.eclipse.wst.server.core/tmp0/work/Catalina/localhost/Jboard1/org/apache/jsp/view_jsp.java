/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.67
 * Generated at: 2022-11-17 02:50:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import kr.co.jboard1.dao.ArticleDAO;
import kr.co.jboard1.db.Sql;
import kr.co.jboard1.bean.ArticleBean;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import kr.co.jboard1.db.DBCP;
import java.sql.Connection;
import kr.co.jboard1.bean.UserBean;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/./_header.jsp", Long.valueOf(1667482167549L));
    _jspx_dependants.put("/././_footer.jsp", Long.valueOf(1667482167548L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.co.jboard1.bean.UserBean");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("kr.co.jboard1.dao.ArticleDAO");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("kr.co.jboard1.db.DBCP");
    _jspx_imports_classes.add("kr.co.jboard1.bean.ArticleBean");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("kr.co.jboard1.db.Sql");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String no = request.getParameter("no");
	String pg = request.getParameter("pg");
	
	ArticleDAO dao = ArticleDAO.getInstance();
	
	// 조회수 +1;
	dao.updateArticleHit(no);
	
	// 글 가져오기
	ArticleBean article = dao.selectArticle(no);
	
	// 댓글 가져오기
	List<ArticleBean> comments = dao.selectComments(no);
	
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	String result = request.getParameter("result");
	UserBean ub = (UserBean)session.getAttribute("sessUser");

	if(ub == null){
		response.sendRedirect("/Jboard1/user/login.jsp?success=101");
		return;
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>글목록</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/Jboard1/css/style.css\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		let result = \"");
      out.print( result );
      out.write("\";\r\n");
      out.write("		if(result == '201'){\r\n");
      out.write("			alert('수정완료!');\r\n");
      out.write("		}else if(result == '202'){\r\n");
      out.write("			alert('삭제완료!');\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id = \"wrapper\">\r\n");
      out.write("        <header>\r\n");
      out.write("            <h3>Board System v1.0</h3>\r\n");
      out.write("            <p>\r\n");
      out.write("                <span>");
      out.print( ub.getNick() );
      out.write("</span>님 반갑습니다.\r\n");
      out.write("                <a href=\"/Jboard1/user/proc/logout.jsp\">[로그아웃]</a>\r\n");
      out.write("            </p>\r\n");
      out.write("        </header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		// 글 삭제\r\n");
      out.write("		$('.btnRemove').click(function(e){\r\n");
      out.write("			\r\n");
      out.write("			let isDelete = confirm('정말 삭제하시겠습니까?');\r\n");
      out.write("			\r\n");
      out.write("			if(isDelete){\r\n");
      out.write("				return true;\r\n");
      out.write("			}else{\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 삭제\r\n");
      out.write("		$(document).on('click', '.del', function(e){\r\n");
      out.write("			e.preventDefault();\r\n");
      out.write("					\r\n");
      out.write("			let isDeleteOk = confirm('정말 삭제하시겠습니까?');\r\n");
      out.write("						\r\n");
      out.write("			if(isDeleteOk){\r\n");
      out.write("				\r\n");
      out.write("				let article = $(this).closest('article');\r\n");
      out.write("				let no = $(this).attr('data-no');\r\n");
      out.write("				let parent = $(this).attr('data-parent');\r\n");
      out.write("				\r\n");
      out.write("				let jsonData = {\"no\":no, \"parent\":parent};\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: '/Jboard1/proc/commentDeleteProc.jsp',\r\n");
      out.write("					type: 'POST',\r\n");
      out.write("					data: jsonData,\r\n");
      out.write("					dataType: 'json',\r\n");
      out.write("					success: function(data){\r\n");
      out.write("						\r\n");
      out.write("						if(data.result == 1) {\r\n");
      out.write("							alert('댓글이 삭제되었습니다.');\r\n");
      out.write("						}\r\n");
      out.write("						article.hide();\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 수정\r\n");
      out.write("		$(document).on('click', '.modify', function(e){\r\n");
      out.write("			e.preventDefault();\r\n");
      out.write("			\r\n");
      out.write("			let txt = $(this).text();\r\n");
      out.write("			let p_tag = $(this).parent().prev();\r\n");
      out.write("			\r\n");
      out.write("			if(txt == '수정'){\r\n");
      out.write("				// 수정모드\r\n");
      out.write("				$(this).text('수정완료');\r\n");
      out.write("				p_tag.attr('contentEditable', true);\r\n");
      out.write("				p_tag.focus();\r\n");
      out.write("			}else{\r\n");
      out.write("				// 수정완료\r\n");
      out.write("				$(this).text('수정');\r\n");
      out.write("				\r\n");
      out.write("				let no = $(this).attr('data-no');\r\n");
      out.write("				let content = p_tag.text();\r\n");
      out.write("				\r\n");
      out.write("				let jsonData = {\r\n");
      out.write("						\"no\": no,\r\n");
      out.write("						\"content\": content\r\n");
      out.write("				};\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url: '/Jboard1/proc/commentModifyProc.jsp',\r\n");
      out.write("					type: 'POST',\r\n");
      out.write("					data: jsonData,\r\n");
      out.write("					dataType: 'json',\r\n");
      out.write("					success: function(data){\r\n");
      out.write("						\r\n");
      out.write("						if(data.result == 1) {\r\n");
      out.write("							alert('댓글이 수정되었습니다.');							\r\n");
      out.write("							p_tag.attr('contentEditable', false);\r\n");
      out.write("							\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 작성\r\n");
      out.write("		$('.commentForm > form').submit(function(){\r\n");
      out.write("		\r\n");
      out.write("			let no 		= $(this).children('input[name=no]').val();\r\n");
      out.write("			let uid 	= $(this).children('input[name=uid]').val();\r\n");
      out.write("			let textarea = $(this).children('textarea[name=content]');\r\n");
      out.write("			let content = textarea.val();\r\n");
      out.write("			\r\n");
      out.write("			if(content == ''){\r\n");
      out.write("				alert('댓글을 작성하세요.');\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			let jsonData = {\r\n");
      out.write("					\"no\" : no,\r\n");
      out.write("					\"uid\": uid,\r\n");
      out.write("					\"content\":content\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:'/Jboard1/proc/commentWriteProc.jsp',\r\n");
      out.write("				method:'POST',\r\n");
      out.write("				data: jsonData,\r\n");
      out.write("				dataType:'json',\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					\r\n");
      out.write("					if(data.result > 0){\r\n");
      out.write("						\r\n");
      out.write("						let article = \"<article>\";\r\n");
      out.write("							article += \"<span class='nick'>\"+data.nick+\"</span>\";\r\n");
      out.write("							article += \"<span class='date'>\"+data.date+\"</span>\";\r\n");
      out.write("							article += \"<p class='content'>\"+data.content+\"</p>\";\r\n");
      out.write("							article += \"<div>\";\r\n");
      out.write("							article += \"<a href='#' class='del' data-no='\"+data.no+\"' data-parent=''\"+data.parent+\">삭제</a>\";							\r\n");
      out.write("							article += \"<a href='#' class='modify' data-no='\"+data.no+\"'>수정</a>\";							\r\n");
      out.write("							article += \"</div>\";\r\n");
      out.write("							article += \"</article>\";\r\n");
      out.write("							\r\n");
      out.write("							$('.commentList > .empty').hide();\r\n");
      out.write("							$('.commentList').append(article);\r\n");
      out.write("							textarea.val('');\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			return false;\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("        <main id=\"board\">\r\n");
      out.write("            <section class=\"view\">\r\n");
      out.write("                \r\n");
      out.write("                <table border=\"0\">\r\n");
      out.write("                    <caption>글보기</caption>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>제목</th>\r\n");
      out.write("                        <td><input type=\"text\" name=\"title\" readonly value=\"");
      out.print( article.getTitle() );
      out.write("\"></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    ");
 if(article.getFile() > 0){ 
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>첨부파일</th>\r\n");
      out.write("                        <td><a href=\"/Jboard1/proc/download.jsp?parent=");
      out.print( article.getNo() );
      out.write('>');
      out.write('"');
      out.write('>');
      out.print( article.getOriName() );
      out.write("</a>&nbsp;<span>");
      out.print( article.getDownload() );
      out.write("</span>회 다운로드</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>내용</th>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <textarea name=\"content\" readonly>");
      out.print( article.getContent() );
      out.write("</textarea>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("\r\n");
      out.write("                <div>\r\n");
      out.write("                	");
 if(ub.getUid().equals(article.getUid())) { 
      out.write("\r\n");
      out.write("                    <a href=\"/Jboard1/proc/deleteProc.jsp?no=");
      out.print( article.getNo() );
      out.write("&pg=");
      out.print( pg );
      out.write("\" class=\"btn btnRemove\">삭제</a>\r\n");
      out.write("                    <a href=\"/Jboard1/modify.jsp?no=");
      out.print( article.getNo() );
      out.write("&pg=");
      out.print( pg );
      out.write("\" class=\"btn btnModify\">수정</a>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                    <a href=\"/Jboard1/list.jsp?pg=");
      out.print( pg );
      out.write("\" class=\"btn btnList\">목록</a>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <!-- 댓글 목록 -->\r\n");
      out.write("                <section class=\"commentList\">\r\n");
      out.write("                    <h3>댓글목록</h3>\r\n");
      out.write("                    \r\n");
      out.write("                    ");
 for(ArticleBean comment : comments){ 
      out.write("\r\n");
      out.write("                    <article>\r\n");
      out.write("                        <span class=\"nick\">");
      out.print( comment.getNick() );
      out.write("</span>\r\n");
      out.write("                        <span class=\"date\">");
      out.print( comment.getRdate().substring(2, 10) );
      out.write("</span>\r\n");
      out.write("                        <p class=\"content\">");
      out.print( comment.getContent() );
      out.write("</p>\r\n");
      out.write("                        ");
 if(ub.getUid().equals(comment.getUid())) { 
      out.write("\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <a href=\"#\" class=\"del\" data-no=\"");
      out.print( comment.getNo() );
      out.write("\" data-parent=\"");
      out.print( comment.getParent() );
      out.write("\">삭제</a>\r\n");
      out.write("                            <a href=\"#\" class=\"modify\" data-no=\"");
      out.print( comment.getNo());
      out.write("\">수정</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </article>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                    \r\n");
      out.write("                    ");
 if(comments.size() == 0){ 
      out.write("\r\n");
      out.write("                    <p class=\"empty\">등록된 댓글이 없습니다.</p> \r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </section>\r\n");
      out.write("\r\n");
      out.write("                <!-- 댓글 쓰기 -->\r\n");
      out.write("                <section class=\"commentForm\">\r\n");
      out.write("                    <h3>댓글쓰기</h3>\r\n");
      out.write("                    <form action=\"#\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"no\" value=\"");
      out.print( no );
      out.write("\"/>\r\n");
      out.write("                    	<input type=\"hidden\" name=\"uid\" value=\"");
      out.print( ub.getUid() );
      out.write("\"/>               \r\n");
      out.write("                        <textarea name=\"content\" placeholder=\"댓글 내용을 입력하세요.\"></textarea>\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <a href=\"#\" class=\"btn btnCancel\">취소</a>\r\n");
      out.write("                            <input type=\"submit\" value=\"작성완료\" class=\"btn btnComplete\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </section>\r\n");
      out.write("\r\n");
      out.write("            </section>\r\n");
      out.write("        </main>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <footer>\r\n");
      out.write("            <p>ⓒCopyright 094haley.or.kr</p>\r\n");
      out.write("        </footer>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
